/*
   Copyright 2015 Samitha Ekanayake

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 */

package com.spiyki.simplebackup.gui;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.BorderFactory;
import java.awt.event.*;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.io.*;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import com.spiyki.simplebackup.utils.*;
/**
 *
 * @author  samitha_2
 */
public class guiSimpleBackupMain extends javax.swing.JFrame {
    MainFunctions mainHandles;
    /** Creates new form guiSimpleBackupMain */
    public guiSimpleBackupMain() throws IOException{
        initComponents();                 
        mainHandles= new MainFunctions(this);
        InitGUIitems();       
    }

    private void InitGUIitems()
    {
        int SCw = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
        int SCh = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
        setLocation(SCw/2-225 , SCh/2-200);
        java.awt.Toolkit toolkit = this.getToolkit(); 
        java.awt.Image appIcon = toolkit.createImage("ICON.jpg"); 
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        MainPanel = new javax.swing.JPanel();
        cmdAddPath = new javax.swing.JButton();
        cmdEditPath = new javax.swing.JButton();
        cmdDeletePath = new javax.swing.JButton();
        cmdViewRestore = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstBackupPaths = new javax.swing.JList();
        cmdMinimize = new javax.swing.JButton();
        cmdExit = new javax.swing.JButton();
        cmdHelp = new javax.swing.JButton();
        cmdBackupNow = new javax.swing.JButton();
        lblMainStat = new javax.swing.JLabel();
        RestorePanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstRestorePoints = new javax.swing.JList();
        cmdBackFromRestore = new javax.swing.JButton();
        lblRestoreName = new javax.swing.JLabel();
        cmdRestoreStart = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtRestoreFolderView = new javax.swing.JTextField();
        AddPathPanel = new javax.swing.JPanel();
        cmdSave = new javax.swing.JButton();
        lblSrc = new javax.swing.JLabel();
        txtSrc = new javax.swing.JTextField();
        lblDst = new javax.swing.JLabel();
        txtDst = new javax.swing.JTextField();
        lblBSch = new javax.swing.JLabel();
        cmbScheduleItems = new javax.swing.JComboBox();
        txtScheduleInterval1 = new javax.swing.JTextField();
        lblSchDesc1 = new javax.swing.JLabel();
        txtScheduleInterval2 = new javax.swing.JTextField();
        lblSchDesc2 = new javax.swing.JLabel();
        lblRestore = new javax.swing.JLabel();
        txtRestore = new javax.swing.JTextField();
        lblIntro = new javax.swing.JLabel();
        cmdBrowseSrc = new javax.swing.JButton();
        cmdBrowseDst = new javax.swing.JButton();
        lblBackupName = new javax.swing.JLabel();
        txtBackupName = new javax.swing.JTextField();
        lblRestoreDir = new javax.swing.JLabel();
        txtRestoreFolder = new javax.swing.JTextField();
        cmdBrowseRestore = new javax.swing.JButton();
        cmdEditBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simple Backup");
        setIconImage(getIconImage());
        setUndecorated(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        MainPanel.setOpaque(false);
        MainPanel.setPreferredSize(new java.awt.Dimension(500, 375));
        MainPanel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                MainPanelPropertyChange(evt);
            }
        });
        MainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmdAddPath.setText("Add new backup path");
        cmdAddPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddPathActionPerformed(evt);
            }
        });
        MainPanel.add(cmdAddPath, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 200, -1));

        cmdEditPath.setText("Edit the backup path configuration");
        cmdEditPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditPathActionPerformed(evt);
            }
        });
        MainPanel.add(cmdEditPath, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 200, -1));

        cmdDeletePath.setText("Delete the selected backup path");
        cmdDeletePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeletePathActionPerformed(evt);
            }
        });
        MainPanel.add(cmdDeletePath, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 200, -1));

        cmdViewRestore.setText("View restore points");
        cmdViewRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdViewRestoreActionPerformed(evt);
            }
        });
        MainPanel.add(cmdViewRestore, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 200, -1));

        lstBackupPaths.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstBackupPaths.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstBackupPathsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstBackupPaths);

        MainPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 260, 240));

        cmdMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/images/But_MIN.png"))); // NOI18N
        cmdMinimize.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/res/images/But_MIN_R.png"))); // NOI18N
        cmdMinimize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdMinimizeActionPerformed(evt);
            }
        });
        MainPanel.add(cmdMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 5, 25, 25));
        cmdMinimize.getAccessibleContext().setAccessibleName("cmdMin");

        cmdExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/images/ButX.png"))); // NOI18N
        cmdExit.setName("cmdExit"); // NOI18N
        cmdExit.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/res/images/ButX_R.png"))); // NOI18N
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });
        MainPanel.add(cmdExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 5, 25, 25));
        cmdExit.getAccessibleContext().setAccessibleName("cmdExit");

        cmdHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/images/Help_Icon.png"))); // NOI18N
        cmdHelp.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/res/images/Help_Icon_R.png"))); // NOI18N
        MainPanel.add(cmdHelp, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 40, 25, 25));

        cmdBackupNow.setText("Backup Now");
        cmdBackupNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackupNowActionPerformed(evt);
            }
        });
        MainPanel.add(cmdBackupNow, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 200, -1));

        lblMainStat.setText(" ");
        MainPanel.add(lblMainStat, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 250, -1));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(MainPanel, gridBagConstraints);

        RestorePanel.setOpaque(false);
        RestorePanel.setPreferredSize(new java.awt.Dimension(500, 375));
        RestorePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lstRestorePoints.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lstRestorePoints);

        RestorePanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 370, 160));

        cmdBackFromRestore.setText("Back");
        cmdBackFromRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackFromRestoreActionPerformed(evt);
            }
        });
        RestorePanel.add(cmdBackFromRestore, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 160, 80, -1));

        lblRestoreName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblRestoreName.setText("lblBackup Name");
        RestorePanel.add(lblRestoreName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        cmdRestoreStart.setText("Restore");
        cmdRestoreStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRestoreStartActionPerformed(evt);
            }
        });
        RestorePanel.add(cmdRestoreStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 130, 80, -1));

        jLabel2.setText("Restore Folder");
        RestorePanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));

        txtRestoreFolderView.setText("jTextField1");
        RestorePanel.add(txtRestoreFolderView, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 370, -1));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(RestorePanel, gridBagConstraints);

        AddPathPanel.setMinimumSize(new java.awt.Dimension(490, 360));
        AddPathPanel.setOpaque(false);
        AddPathPanel.setPreferredSize(new java.awt.Dimension(500, 375));
        AddPathPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmdSave.setText("Save Configuration");
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });
        AddPathPanel.add(cmdSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 320, 150, 30));

        lblSrc.setText("Source Folder");
        AddPathPanel.add(lblSrc, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));
        AddPathPanel.add(txtSrc, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, 200, -1));

        lblDst.setText("Destination Folder");
        AddPathPanel.add(lblDst, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));
        AddPathPanel.add(txtDst, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 200, -1));

        lblBSch.setText("Backup Schedule");
        AddPathPanel.add(lblBSch, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));

        cmbScheduleItems.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbScheduleItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbScheduleItemsActionPerformed(evt);
            }
        });
        AddPathPanel.add(cmbScheduleItems, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, 110, -1));
        AddPathPanel.add(txtScheduleInterval1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 210, 70, -1));

        lblSchDesc1.setText("At the hour");
        AddPathPanel.add(lblSchDesc1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 210, -1, -1));
        AddPathPanel.add(txtScheduleInterval2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 240, 70, -1));

        lblSchDesc2.setText("On the day");
        AddPathPanel.add(lblSchDesc2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 240, -1, -1));

        lblRestore.setText("Number of Restore Points");
        AddPathPanel.add(lblRestore, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));
        AddPathPanel.add(txtRestore, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 260, 50, -1));

        lblIntro.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblIntro.setText("Add/Edit Backup Path Configuration");
        AddPathPanel.add(lblIntro, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        cmdBrowseSrc.setText("Browse");
        cmdBrowseSrc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBrowseSrcActionPerformed(evt);
            }
        });
        AddPathPanel.add(cmdBrowseSrc, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 140, 80, -1));

        cmdBrowseDst.setText("Browse");
        cmdBrowseDst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBrowseDstActionPerformed(evt);
            }
        });
        AddPathPanel.add(cmdBrowseDst, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, 80, -1));

        lblBackupName.setText("Backup Name/ Identifier");
        AddPathPanel.add(lblBackupName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));
        AddPathPanel.add(txtBackupName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 200, -1));

        lblRestoreDir.setText("Restore Folder");
        AddPathPanel.add(lblRestoreDir, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));
        AddPathPanel.add(txtRestoreFolder, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 290, 200, -1));

        cmdBrowseRestore.setText("Browse");
        cmdBrowseRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBrowseRestoreActionPerformed(evt);
            }
        });
        AddPathPanel.add(cmdBrowseRestore, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 290, 80, -1));

        cmdEditBack.setText("Back");
        cmdEditBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditBackActionPerformed(evt);
            }
        });
        AddPathPanel.add(cmdEditBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 320, 80, 30));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(AddPathPanel, gridBagConstraints);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/images/background.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        getContentPane().add(jLabel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void MainPanelPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_MainPanelPropertyChange
// TODO add your handling code here:
}//GEN-LAST:event_MainPanelPropertyChange

private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed
// TODO add your handling code here:
    System.exit(0);
}//GEN-LAST:event_cmdExitActionPerformed

private void cmdMinimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdMinimizeActionPerformed
// TODO add your handling code here:
    setState(ICONIFIED);
}//GEN-LAST:event_cmdMinimizeActionPerformed

private void lstBackupPathsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstBackupPathsValueChanged
// TODO add your handling code here:
    if (evt.getValueIsAdjusting() == false) {
    //If the values are not changing
        if (lstBackupPaths.getSelectedIndex() == -1) {
            //If nothing is selected
            cmdEditPath.setEnabled(false);
            cmdDeletePath.setEnabled(false);
            cmdViewRestore.setEnabled(false);
            cmdBackupNow.setEnabled(false);
        } else {
            //If some value is selected
            cmdEditPath.setEnabled(true);
            cmdDeletePath.setEnabled(true);
            cmdViewRestore.setEnabled(true);
            cmdBackupNow.setEnabled(true);
        }
    }
}//GEN-LAST:event_lstBackupPathsValueChanged

private void cmdEditPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditPathActionPerformed
// TODO add your handling code here:
    mainHandles.EditExistingBackupPath(lstBackupPaths.getSelectedIndex());
}//GEN-LAST:event_cmdEditPathActionPerformed

private void cmdAddPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddPathActionPerformed
// TODO add your handling code here:
    mainHandles.AddNewBackupPath();
}//GEN-LAST:event_cmdAddPathActionPerformed

private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
// TODO add your handling code here:
    mainHandles.SaveBackupFileSettings();    
}//GEN-LAST:event_cmdSaveActionPerformed

private void cmbScheduleItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbScheduleItemsActionPerformed
// TODO add your handling code here:
    mainHandles.SettingsForSelectedSchedule(cmbScheduleItems.getSelectedIndex(),0,0);
    /*switch(cmbScheduleItems.getSelectedIndex()){
        case 0: //Manual
            lblSchDesc1.setEnabled(false);
            lblSchDesc2.setEnabled(false);
            txtScheduleInterval1.setEnabled(false);
            txtScheduleInterval2.setEnabled(false);
            break;
        case 1: //Daily
            lblSchDesc1.setEnabled(true);
            lblSchDesc2.setEnabled(false);
            txtScheduleInterval1.setEnabled(true);
            txtScheduleInterval2.setEnabled(false);            
            break;
        case 2: //Weekly
            lblSchDesc1.setEnabled(true);
            lblSchDesc2.setEnabled(true);
            txtScheduleInterval1.setEnabled(true);
            txtScheduleInterval2.setEnabled(true);                
            break;
        case 3: //Monthly
            lblSchDesc1.setEnabled(true);
            lblSchDesc2.setEnabled(true);
            txtScheduleInterval1.setEnabled(true);
            txtScheduleInterval2.setEnabled(true);              
            break;
        default:
            break;
    }*/
}//GEN-LAST:event_cmbScheduleItemsActionPerformed

private void cmdEditBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditBackActionPerformed
// TODO add your handling code here:
    mainHandles.DisplayMainWindow();    
}//GEN-LAST:event_cmdEditBackActionPerformed

private void cmdDeletePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeletePathActionPerformed
// TODO add your handling code here:
    JOptionPane optionPane = new JOptionPane();
    int a=optionPane.showConfirmDialog(null, "Do you want to delete this backup path?", "Confirm your action" , JOptionPane.YES_NO_OPTION);
    if(a==0){
        mainHandles.DeleteSelectedPath(lstBackupPaths.getSelectedIndex());
    }
}//GEN-LAST:event_cmdDeletePathActionPerformed

private void cmdBackupNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackupNowActionPerformed
// TODO add your handling code here:
    JOptionPane optionPane = new JOptionPane();
    int a=optionPane.showConfirmDialog(null, "Do you need to backup now?", "Confirm your action" , JOptionPane.YES_NO_OPTION);
    if(a==0){    
        mainHandles.ExecuteBackup(lstBackupPaths.getSelectedIndex());
    }
}//GEN-LAST:event_cmdBackupNowActionPerformed

private void cmdBackFromRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackFromRestoreActionPerformed
// TODO add your handling code here:
    mainHandles.DisplayMainWindow();   
}//GEN-LAST:event_cmdBackFromRestoreActionPerformed

private void cmdViewRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdViewRestoreActionPerformed
// TODO add your handling code here:
    mainHandles.DisplayRestoreWindow(lstBackupPaths.getSelectedIndex());
}//GEN-LAST:event_cmdViewRestoreActionPerformed

private void cmdRestoreStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRestoreStartActionPerformed
// TODO add your handling code here:
    JOptionPane optionPane = new JOptionPane();
    int a=optionPane.showConfirmDialog(null, "Do you need to restore now?", "Confirm your action" , JOptionPane.YES_NO_OPTION);
    if(a==0){     
        mainHandles.ExecuteRestore(lstRestorePoints.getSelectedIndex());
    }
}//GEN-LAST:event_cmdRestoreStartActionPerformed

private void cmdBrowseSrcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBrowseSrcActionPerformed
// TODO add your handling code here:
    JFileChooser thisChooser=new JFileChooser();
    thisChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    int chooserRes=thisChooser.showOpenDialog(this);
    if(chooserRes==JFileChooser.APPROVE_OPTION){
        File thisFile=thisChooser.getSelectedFile();
        txtSrc.setText(thisFile.getAbsolutePath());
    }
}//GEN-LAST:event_cmdBrowseSrcActionPerformed

private void cmdBrowseDstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBrowseDstActionPerformed
// TODO add your handling code here:
    JFileChooser thisChooser=new JFileChooser();
    thisChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    int chooserRes=thisChooser.showOpenDialog(this);
    if(chooserRes==JFileChooser.APPROVE_OPTION){
        File thisFile=thisChooser.getSelectedFile();
        txtDst.setText(thisFile.getAbsolutePath());
    }    
}//GEN-LAST:event_cmdBrowseDstActionPerformed

private void cmdBrowseRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBrowseRestoreActionPerformed
// TODO add your handling code here:
    JFileChooser thisChooser=new JFileChooser();
    thisChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    int chooserRes=thisChooser.showOpenDialog(this);
    if(chooserRes==JFileChooser.APPROVE_OPTION){
        File thisFile=thisChooser.getSelectedFile();
        txtRestoreFolder.setText(thisFile.getAbsolutePath());
    }    
}//GEN-LAST:event_cmdBrowseRestoreActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]){
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run(){
                try{
                    new guiSimpleBackupMain().setVisible(true);
                }catch(IOException e){
                    
                }
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel AddPathPanel;
    public javax.swing.JPanel MainPanel;
    public javax.swing.JPanel RestorePanel;
    public javax.swing.JComboBox cmbScheduleItems;
    public javax.swing.JButton cmdAddPath;
    public javax.swing.JButton cmdBackFromRestore;
    public javax.swing.JButton cmdBackupNow;
    public javax.swing.JButton cmdBrowseDst;
    private javax.swing.JButton cmdBrowseRestore;
    public javax.swing.JButton cmdBrowseSrc;
    public javax.swing.JButton cmdDeletePath;
    private javax.swing.JButton cmdEditBack;
    public javax.swing.JButton cmdEditPath;
    private javax.swing.JButton cmdExit;
    private javax.swing.JButton cmdHelp;
    private javax.swing.JButton cmdMinimize;
    public javax.swing.JButton cmdRestoreStart;
    public javax.swing.JButton cmdSave;
    public javax.swing.JButton cmdViewRestore;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBSch;
    private javax.swing.JLabel lblBackupName;
    private javax.swing.JLabel lblDst;
    private javax.swing.JLabel lblIntro;
    public javax.swing.JLabel lblMainStat;
    private javax.swing.JLabel lblRestore;
    private javax.swing.JLabel lblRestoreDir;
    public javax.swing.JLabel lblRestoreName;
    public javax.swing.JLabel lblSchDesc1;
    public javax.swing.JLabel lblSchDesc2;
    private javax.swing.JLabel lblSrc;
    public javax.swing.JList lstBackupPaths;
    public javax.swing.JList lstRestorePoints;
    public javax.swing.JTextField txtBackupName;
    public javax.swing.JTextField txtDst;
    public javax.swing.JTextField txtRestore;
    public javax.swing.JTextField txtRestoreFolder;
    public javax.swing.JTextField txtRestoreFolderView;
    public javax.swing.JTextField txtScheduleInterval1;
    public javax.swing.JTextField txtScheduleInterval2;
    public javax.swing.JTextField txtSrc;
    // End of variables declaration//GEN-END:variables

}

class MyPanel extends JPanel {

    public MyPanel() {
        setBorder(BorderFactory.createLineBorder(Color.black));
    }

    public Dimension getPreferredSize() {
        return new Dimension(250,200);
    }

    public void paintComponent(Graphics g) {
        super.paintComponent(g);       

        // Draw Text
        g.drawString("This is my custom Panel!",10,20);
    }  
}
